/* devel-expt-report*/
/* output/append experimental details to a csv report*/
//#include <time.h>
#include <inc/exptUtil>
#include <time.h>

int ts_major = GetTsVersionMajor();
int ts_minor = GetTsVersionMinor();
int ts_patch = GetTsVersionPl();


int verbose=0; //set to 1 to be verbose

char report_filename[PATH_MAX]="";
sprintf( report_filename, "%s/logfiles/expt-report.csv", PathXWinNMRProg() );
/*****************************/
FILE *report_file_pointer = NULL;
FILE *fp;

int exp_time = 0;
int num_scans = 0;
int line_len = 0;
int date_unix;
int verbose=0;
char instrum_name[40]="";
char data_path[PATH_MAX]="";
char experiment[80]="";
char nucleus[6]="";
char pulse_prog[80]="";
char date_str[50]="";

time_t now_s, dtime_s, cdtime_s;     /* seconds since 1970 */
struct tm *now;     /* structure with year, month etc. */

if (verbose ==1) {
   Proc_err(INFO_OPT,"ts_major is %i \n minor %i \n patch %i",ts_major, ts_minor, ts_patch);
}

#ifdef HAS_WINDOWS_FEATURES
   if ( (ts_major==3) && (ts_minor>5) && (ts_patch>3) ) {
    	sprintf(report_filename,"C:\\Bruker\\diskless\\prog\\logfiles\\expt-report.csv");
   }
   else{
      sprintf( report_filename, "%s\\logfiles\\expt-report.csv", PathXWinNMRProg() );
   }
#else //Not actually checked this on linux... We have no linux xpectrometers
 		if ( (ts_major==3) && (ts_minor>5) && (ts_patch>3) ) {
    	sprintf(report_filename,"/opt/diskless/prog/logfiles/expt-report.csv");
   }
   else{
      sprintf( report_filename, "%s/logfiles/expt-report.csv", PathXWinNMRProg() );
   }
#endif

if (verbose ==1) {
   Proc_err(INFO_OPT,"expt-report file location - %s",report_filename);
}

GETCURDATA
SETCURDATA
FETCHPARS("INSTRUM", instrum_name)
FETCHPARS("EXP",experiment)
FETCHPARS("DATE", &date_unix)
FETCHPARS("DATE", &dtime_s)
strcpy(data_path,ACQUPATH("acqus") );
FETCHPARS("NS",&num_scans)
FETCHPAR("NUC1",&nucleus)
FETCHPAR("PULPROG", pulse_prog)
exp_time = CalcExpTime();

// get spectrum acquisition time
now = localtime(&dtime_s);
sprintf(date_str, "%04i/%02i/%02i %02i:%02i:%02i", now->tm_year+1900, 1+now->tm_mon, now->tm_mday, now->tm_hour, now->tm_min, now->tm_sec);

if(verbose == 1){
   Proc_err(DEF_ERR_OPT,"Instrument name defined as :- %s", instrum_name);
   Proc_err(DEF_ERR_OPT,"Dataset name is :-  %s", name);
   Proc_err(DEF_ERR_OPT,"Experiment performed is :- %s", experiment);
   Proc_err(DEF_ERR_OPT,"Dataset unix date is :- %i", date_unix);
   Proc_err(DEF_ERR_OPT,"Dataset date (converted) is :- %s", date_str);
   Proc_err(DEF_ERR_OPT,"Disk defined as :- %s", disk);
   Proc_err(DEF_ERR_OPT,"Data path is :- %s", data_path);
   Proc_err(DEF_ERR_OPT,"Data expno is :- %i", expno);
   Proc_err(DEF_ERR_OPT,"Number of scans is :- %i", num_scans);
   Proc_err(DEF_ERR_OPT,"Nuc1 is :- %s", nucleus);
   Proc_err(DEF_ERR_OPT,"Defined Experiment time in seconds is :-  %i ", exp_time);

}




report_file_pointer = fopen(report_filename,"a+");
if (report_file_pointer == NULL)
{
  Proc_err(DEF_ERR_OPT,"Can't open report file - %s", report_filename);
  exit(1);
}
else
{
  fprintf(report_file_pointer,"%s,%s,%s,%i,%s,%s,%s,%i,%s,%s,%i,%i\n", instrum_name, name, experiment, date_unix, date_str, disk, data_path, expno, nucleus, pulse_prog, num_scans, exp_time);
  fclose(report_file_pointer);
}
QUIT
