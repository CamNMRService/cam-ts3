/*sample submission software trying to overwrite a V/Z number*/
/*rewrite to parse defaults file an email general error message*/
/*taken from argv[3]*/

#include <stdio.h>
#include <inc/sysutil>


/*THIS MUST BE SET**************************************************/

char defaultsfile[PATH_MAX]="c:/windows/ed.txt";
char body[1023]="DO NOT REPLY. Any problems please email nmr-at-ch.cam.ac.uk.";

/******************************************************************/

char in_data[PATH_MAX];
char user_id[255];
char password[255];
char log_dir[255];
char zip_dir[PATH_MAX];
char *file_data,*field;
char orig_au[255],proc_au[255];
char email[255]="nmr@ch.cam.ac.uk";
char status1[127]="emailing";
char zip_cmd_str[2048]="\n";
char email_cmd_str[2048]="\n";
char error_message[1023]="Unspecified error";
char expt_time[255];
char batfile[PATH_MAX],batcmd[127]="top-copy.bat";
char zip_name[PATH_MAX]="unset";
char status_string[127]="working";
char temp_str[PATH_MAX]="temp string";
char data_File[PATH_MAX];
char instrum_name[PATH_MAX];
int finish=0;
int suffix=1;
int ch;
int cmdstatus,orig_expno,i_limit=999,i_exp=1,pdfthere=0,i;
int verbose=1;
int error_message_present=0;

FILE *plist = NULL;
FILE *fdef = NULL;
FILE *fbat = NULL;
FILE *statusprint = NULL;


/*--- Get defaults from the defaults file ----------------------*/
fdef = fopen( defaultsfile, "r" );
rewind(fdef); //go to begining of file
file_data = fgets(in_data, 1023, fdef); //read in file as a continuous string
fclose(fdef); //close the file
//file is open, read data
field = strtok(in_data, ",");
strcpy( user_id,field);
field = strtok(NULL, ",");
sscanf(field, "%s", &password);
field = strtok(NULL, ",");
sscanf(field,"%s", &log_dir);
field = strtok(NULL, ",");
sscanf(field,"%s", &zip_dir);


/*what command line options do we have...*/
/*i_argv[2] should be the option passed to the au program*/
/*
if (i_argc == 3 ) {
	strcpy(error_message,i_argv[2]); //lets just assume first argument is a password.
}else {
	sprintf(error_message, "No argument passed to au program to send as error message");
}
*/

GETCURDATA
FETCHPARS("INSTRUM", instrum_name)
FETCHPAR("TI", error_message)

//get the time
time_t lt;
lt=time(NULL);
sprintf(expt_time, ctime(&lt));
expt_time[strlen(expt_time)-1]=NULL; //strip training newline from time

sprintf (body, "%s Instrument %s %s", expt_time,instrum_name,error_message);
sprintf (email_cmd_str, "sendemail -f %s -t %s -u Janus-Icon-delprod error -m %s -s smtp.gmail.com:587 -o tls=yes -xu %s -xp %s", user_id, email, body, user_id, password);

/*write a dos batch file with the cmd_str and run it*/
/*fbat = fopen(batfile, "w");
fputs( email_cmd_str, fbat);
fclose( fbat);
Show_status(email_cmd_str);
*/
/*send the email*/

//remove comment to actually run
system(email_cmd_str);

//if verbose, display info on what happened
if (verbose==1){	
	Proc_err(INFO_OPT,"user_id is :- %s\n",user_id);
	Proc_err(INFO_OPT,"password is :- %s\n",password);
	Proc_err(INFO_OPT,"parsed defaults file\n");
	Proc_err(INFO_OPT,"error_message is :- %s\n",error_message);
	Proc_err(INFO_OPT,"email_cmd_str is :- %s\n", email_cmd_str);
}

QUIT

