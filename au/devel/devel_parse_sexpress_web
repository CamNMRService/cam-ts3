#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_LINE_LENGTH 1000


   char html_file_name[PATH_MAX]="C:\\Bruker\\Diskless\\prog\\logfiles\\sexpress-index.html";
   char output_file_name[PATH_MAX]="C:\\Bruker\\Diskless\\prog\\logfiles\\sxepress-parsed-log.txt";
   char line[MAX_LINE_LENGTH];
   char out_line[MAX_LINE_LENGTH];
   char out_txt[MAX_LINE_LENGTH];
   char err_txt[MAX_LINE_LENGTH];
   char tmp_cmd[MAX_LINE_LENGTH];
   char sexpress_ip[20]="0.0.0.0";
   char sexpress_prefix[4]="149";
   int i=0;
   int j=0;
   int len=0;
   int in_tag = 0;
   int last_char_comma = 0;

   FILE *output_file;
   FILE *html_file;

if ( (i_argc == 3) && (strcmp(sexpress_ip, sexpress_prefix) !=NULL) )
{

   sprintf(sexpress_ip,"%s",i_argv[2]);
   sprintf(tmp_cmd,"wget -q -t 1 http://%s/ewp/device/main/Changer_Overview/ -O C:\\Bruker\\Diskless\\prog\\logfiles\\sexpress-index.html", sexpress_ip);
   system(tmp_cmd); 
}


   if (html_file == NULL) {
      printf("Failed to open the file.\n");
      return 1;
   }

   html_file = fopen(html_file_name, "r");
    if (html_file == NULL) {
        printf("Error opening file.\n");
        return 1;
    }

    while (fgets(line, sizeof(line), html_file)) {
        len = strlen(line);
        j = 0;

        for (i = 0; i < len; i++) {
            if (line[i] == '\t') {
                continue;  // Ignore tab characters
            }
            else if (line[i] == '<') {
                in_tag = 1;
                continue;
            }
            else if (line[i] == '>') {
                in_tag = 0;
                if (!last_char_comma) {
                    out_line[j++] = ',';  // Add comma if the last character was not a comma
                    last_char_comma = 1;
                }
                continue;
            }

            if (!in_tag) {
                out_line[j++] = line[i];
                last_char_comma = 0;
            }
        }

        out_line[j] = '\0';  // Add null terminator to form a proper string

        output_file = fopen(output_file_name, "a");
        if (output_file == NULL) {
           STOPMSG("Failed to open output file")
           return 1;
        }
        else{
        //what the time mr wolf?
        time_t rawtime;

        struct tm *info;
        char time_buffer[80];
        time(&rawtime);

        info = localtime( &rawtime);
        strftime(time_buffer , 80, "%x,%X", info);

           if ( strstr(out_line,"Error") )
           {
            sprintf(out_txt,"%s%s\n",time_buffer,out_line);
		        fputs( out_txt, output_file);
            
           }
           if ( strstr(out_line,"Changer Status") )
           {
             sprintf(out_txt,"%s%s\n",time_buffer,out_line);
             fputs(out_txt, output_file);
           }
           fclose(output_file);
        }
    }
   
   

   fclose(html_file);
 QUIT

